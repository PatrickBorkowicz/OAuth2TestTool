@{
	ViewData["Title"] = "OAuth2TestTool";
}

@model OAuth2TestTool.MVC.Models.AuthorizationViewModel

<h1>OAuth2 Authentication Testing Tool</h1>
<p>Get the <code>authorization_code</code>, <code>access_token</code> and <code>refresh_token</code> for any registered OAuth2 client!</p>
<p>This site uses cookies. No values are persisted on the server (except potentially in web logs).</p>
<div class="row">
	<div class="col-md-12">
		@Html.ActionLink("Clear Codes / Tokens", "Index", "Home", new { clear = "true" }, new { @class = "btn btn-default" })
		@Html.ActionLink("Clear Cookies", "Index", "Home", new { reset = "true" }, new { @class = "btn btn-danger" })
	</div>
</div>
<hr />
<div class="panel panel-primary">

	<div class="panel-heading">
		<h4 class="panel-title">
			<a data-toggle="collapse" href="#authorization-code" aria-expanded="true">Authorization Code</a>
		</h4>
	</div>
	<div id="authorization-code" class="panel-collapse collapse @(@Model.Focus == "auth-code" || Model.Focus == null ? "in" : "")">
		<div class="panel-body">
			<form asp-controller="Home" asp-action="GetAuthorizationCode">
				<fieldset>
					<div class="form-group">
						@Html.Label("Authorization Endpoint")
						@Html.TextBoxFor(m => m.AuthorizationEndpoint, "", htmlAttributes: new { @class = "form-control", id = "AuthorizationEndpoint", placeholder = "e.g. https://auth.brightspace.com/oauth2/auth" })
					</div>
					<div class="form-group">
						@Html.Label("Redirect URI")
						@Html.TextBoxFor(m => m.RedirectURI, "", htmlAttributes: new { @class = "form-control", id = "RedirectURI", @readonly = "readonly" })
					</div>
					<div class="form-group">
						@Html.Label("Client ID")
						@Html.TextBoxFor(m => m.ClientId, "", htmlAttributes: new { @class = "form-control", id = "ClientId" })
					</div>
					<div class="form-group">
						@Html.Label("Scope")
						@Html.TextBoxFor(m => m.Scope, "", htmlAttributes: new { @class = "form-control", id = "Scope" })
					</div>
					<div class="form-group">
						@Html.Label("State")
						@Html.TextBoxFor(m => m.State, "", htmlAttributes: new { @class = "form-control", id = "State" })
					</div>
					<input type="submit" class="btn btn-primary" value="Get Authorization Code" />
				</fieldset>
			</form>
			<br />

			<p>
				If a user is not aready signed into the provider in this browser, you will be prompted for credentials, then the provider will redirect back to this page (i.e. the redirect uri) along with the
				<strong>authorization code</strong> in the request URL.
			</p>
			<br />
			<h4>Authorization Code</h4>
			<pre>@Model.AuthorizationCode</pre>

		</div>
	</div>
</div>

<div class="panel panel-primary">
	<div class="panel-heading">
		<h4 class="panel-title">
			<a data-toggle="collapse" href="#trade-access-token" aria-expanded="true">Access (and Refresh) Token via Authorization Code</a>
		</h4>
	</div>
	<div id="trade-access-token" class="panel-collapse collapse @(@Model.Focus == "user-tokens" ? "in" : "")">
		<div class="panel-body">

			<form asp-controller="Home" asp-action="GetTokens">
				<fieldset>
					<div class="form-group">
						@Html.Label("Token Endpoint")
						@Html.TextBoxFor(m => m.TokenEndpoint, "", htmlAttributes: new { @class = "form-control", id = "TokenEndpoint", placeholder = "e.g. https://auth.brightspace.com/core/connect/token" })
					</div>
					<div class="form-group">
						@Html.Label("Redirect URI")
						@Html.TextBoxFor(m => m.RedirectURI, "", htmlAttributes: new { @class = "form-control", id = "RedirectURI", @readonly = "readonly" })
					</div>
					<div class="form-group">
						@Html.Label("Client ID")
						@Html.TextBoxFor(m => m.ClientId, "", htmlAttributes: new { @class = "form-control", id = "ClientId" })
					</div>
					<div class="form-group">
						@Html.Label("Client Secret")
						@Html.TextBoxFor(m => m.ClientSecret, "", htmlAttributes: new { @class = "form-control", id = "ClientSecret" })
					</div>
					<div class="form-group">
						@Html.Label("Authorization Code")
						@Html.TextBoxFor(m => m.AuthorizationCode, "", htmlAttributes: new { @class = "form-control", id = "State" })
					</div>
					<input type="submit" class="btn btn-primary" value="Trade In Authorization Code" />
				</fieldset>
			</form>

			<div id="get-tokens-response">
				<br />
				<div>
					<strong>Access Token</strong>
					<pre id="accessToken">@Model.AccessToken</pre>
				</div>
				<div>
					<strong>Refresh Token</strong>
					<pre id="refreshToken">@Model.RefreshToken</pre>
				</div>
				<div>
					<strong>Raw Response</strong>
					<pre id="tokenResponse">@Model.RawResponse</pre>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="panel panel-primary">
	<div class="panel-heading">
		<h4 class="panel-title">
			<a data-toggle="collapse" href="#trade-refresh-token" aria-expanded="true">Access (and Refresh) Token via Refresh Token</a>
		</h4>
	</div>
	<div id="trade-refresh-token" class="panel-collapse collapse @(@Model.Focus == "refresh-token" ? "in" : "")">
		<div class="panel-body">

			<form asp-controller="Home" asp-action="RefreshTokens">
				<fieldset>
					<div class="form-group">
						@Html.Label("Refresh Token Endpoint")
						@Html.TextBoxFor(m => m.RefreshTokenEndpoint, "", htmlAttributes: new { @class = "form-control", id = "RefreshTokenEndpoint", placeholder = "e.g. https://auth.brightspace.com/core/connect/token" })
					</div>
					<div class="form-group">
						@Html.Label("Client ID")
						@Html.TextBoxFor(m => m.ClientId, "", htmlAttributes: new { @class = "form-control", id = "ClientId" })
					</div>
					<div class="form-group">
						@Html.Label("Client Secret")
						@Html.TextBoxFor(m => m.ClientSecret, "", htmlAttributes: new { @class = "form-control", id = "ClientSecret" })
					</div>
					<div class="form-group">
						@Html.Label("Refresh Token")
						@Html.TextBoxFor(m => m.RefreshToken, "", htmlAttributes: new { @class = "form-control", id = "RefreshToken" })
					</div>
					<div class="form-group">
						@Html.Label("Scope")
						@Html.TextBoxFor(m => m.Scope, "", htmlAttributes: new { @class = "form-control", id = "Scope" })
					</div>
					<input type="submit" class="btn btn-primary" value="Trade in Refresh Token" />
				</fieldset>
			</form>
			<div id="refresh-tokens-response">
				<br />
				<div>
					<strong>Access Token</strong>
					<pre id="accessToken">@Model.AccessToken</pre>
				</div>
				<div>
					<strong>Refresh Token</strong>
					<pre id="refreshToken">@Model.RefreshToken</pre>
				</div>
				<div>
					<strong>Raw Response</strong>
					<pre id="tokenResponse">@Model.RawResponse</pre>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	pre {
		/* Prevent horizontal scrolling since access tokens can be very lengthy and contain no line breaks. */
		white-space: normal;
	}
</style>